from aiogram import Bot, Dispatcher, types, executor
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram.dispatcher import FSMContext
import json

with open("config.json", 'r') as cfg:  # –û—Ç–∫—Ä—ã—Ç–∏–µ –≤–Ω–µ—à–Ω–∏—Ö —Ñ–∞–π–ª–æ–≤
    config = json.loads(cfg.read())

with open('txtfiles/history.txt', 'r', encoding='UTF-8') as file:
    history = file.read()

with open('txtfiles/diegest.txt', 'r', encoding='UTF-8') as file:
    digest = file.read()

storage = MemoryStorage()  # –°–æ–∑–¥–∞—ë–º —è—á–µ–π–∫—É –ø–∞–º—è—Ç–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
bot = Bot(config['TOKEN_API'])
dp = Dispatcher(bot, storage=storage)

kb = ReplyKeyboardMarkup(resize_keyboard=True)  # –°–æ–∑–¥–∞—ë–º –Ω–∞—á–∞–ª—å–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
tests_key = KeyboardButton("–¢–µ—Å—Ç—ã")
history_key = KeyboardButton("–ò—Å—Ç–æ—Ä–∏—è –∫–æ–º–∞–Ω–¥—ã")
notes_key = KeyboardButton("–ö–æ–Ω—Å–ø–µ–∫—Ç—ã")
digest_key = KeyboardButton("–î–∞–π–¥–∂–µ—Å—Ç")
kb.add(tests_key).insert(history_key).add(notes_key).insert(digest_key)


class ProfileStatesGroup(StatesGroup):  # –ö–ª–∞—Å—Å, –≥–¥–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤—Å–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    get_file_number = State()
    get_file_from_admin = State()
    get_file_name_from_admin = State()
    get_del_number_from_admin = State()


@dp.message_handler(commands=['start'])  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start_command(message: types.Message):
    if message.from_user.id in config['ADMIN']:
        kb.add(KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ñ–∞–π–ª"))
        kb.insert(KeyboardButton("–£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª"))
        await message.answer("–¢—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ üòé")
    await bot.send_message(chat_id=message.chat.id,
                           text="–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç...\n–ò—Å–ø–æ–ª—å–∑—É–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å–æ –º–Ω–æ–π.",
                           reply_markup=kb)


@dp.message_handler()
async def unclear_command(message: types.Message):  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ª—é–±—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –±–µ–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    if message.text == "–¢–µ—Å—Ç—ã":
        await message.answer(text="–Ø –ø–æ–∫–∞ —á—Ç–æ –Ω–µ –º–æ–≥—É –¥–∞–≤–∞—Ç—å —Ç–µ–±–µ —Ç–µ—Å—Ç—ã ü•∫")
    elif message.text == "–ò—Å—Ç–æ—Ä–∏—è –∫–æ–º–∞–Ω–¥—ã":
        await message.answer(text=history)
    elif message.text == "–ö–æ–Ω—Å–ø–µ–∫—Ç—ã":
        with open("file_ids.json", 'r', encoding='UTF-8') as files_json:
            files = json.loads(files_json.read()).keys()
        if files:
            cons = "–í—ã–±–µ—Ä–∏ –∫–æ–Ω—Å–ø–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å:\n"
            for counter, name in enumerate(files):
                cons += f"{counter + 1}. " + name + ".\n"
            cons += "–ß—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –∫–æ–Ω—Å–ø–µ–∫—Ç, –æ—Ç–ø—Ä–∞–≤—å —á–∏—Å–ª–æ, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –ø–æ—Ä—è–¥–∫—É –∫–æ–Ω—Å–ø–µ–∫—Ç–∞ –≤ —Å–ø–∏—Å–∫–µ üòÅ"
            await ProfileStatesGroup.get_file_number.set()
            await message.answer(text=cons)
        else:
            await message.answer(text="–ö–æ–Ω—Å–ø–µ–∫—Ç–æ–≤ –ø–æ–∫–∞ —á—Ç–æ –Ω–µ—Ç ü•∫")
    elif message.text == "–î–∞–π–¥–∂–µ—Å—Ç":
        await message.answer(text=digest)
    elif message.text == "–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ñ–∞–π–ª":
        if message.from_user.id in config['ADMIN']:
            with open("file_ids.json", 'r', encoding='UTF-8') as files_json:
                files = json.loads(files_json.read()).keys()
            cons = "–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ –±–æ—Ç–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è —Ñ–∞–π–ª—ã:\n"
            for counter, name in enumerate(files):
                cons += f"{counter + 1}. " + name + ".\n"
            await message.answer(cons)
            await message.answer("–ö–∏–¥–∞–π —Ñ–∞–π–ª —Å—é–¥–∞!")
            await ProfileStatesGroup.get_file_from_admin.set()
        else:
            await message.answer("–£ —Ç–µ–±—è –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –¥–µ–π—Å—Ç–≤–∏—é üò°")
    elif message.text == "–£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª":
        if message.from_user.id in config['ADMIN']:
            with open("file_ids.json", 'r', encoding='UTF-8') as files_json:
                files = json.loads(files_json.read()).keys()
            cons = "–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ –±–æ—Ç–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è —Ñ–∞–π–ª—ã:\n"
            for counter, name in enumerate(files):
                cons += f"{counter + 1}. " + name + ".\n"
            await message.answer(cons)
            await message.answer("–ù–∞–ø–∏—à–∏ –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä —Ñ–∞–π–ª–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å.\n"
                                 "–ï—Å–ª–∏ –Ω–µ —Ö–æ—á–µ—à—å –Ω–∏—á–µ–≥–æ —É–¥–∞–ª—è—Ç—å –Ω–∞–ø–∏—à–∏ /cancel")
            await ProfileStatesGroup.get_del_number_from_admin.set()
    else:
        await message.answer(text="–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è ü•∫")


@dp.message_handler(commands=['cancel'], state='*')  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /cancel –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
async def cancel_command(message: types.Message, state: FSMContext):
    if state is None:
        return
    await state.finish()
    await message.answer("–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ!")


@dp.message_handler(content_types=['document'], state=ProfileStatesGroup.get_file_from_admin)
async def get_file_from_admin(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['document'] = message.document.file_id
    await message.answer(
        "–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ! –¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ —Ñ–∞–π–ª–∞, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ —Å–ø–∏—Å–∫–µ —Ñ–∞–π–ª–æ–≤.")
    await ProfileStatesGroup.next()


@dp.message_handler(content_types=['text'], state=ProfileStatesGroup.get_file_from_admin)
async def gffa_exception(message: types.Message, state: FSMContext):
    await message.answer("–Ø –∂–¥—É –æ—Ç —Ç–µ–±—è —Ñ–∞–π–ª, –∞ –Ω–µ –ø—Ä–∏–∑–Ω–∞–Ω–∏–µ –≤ –ª—é–±–≤–∏!\n"
                         "–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –æ—Ç–º–µ–Ω–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–ø–∏—à–∏ /cancel")


@dp.message_handler(state=ProfileStatesGroup.get_file_name_from_admin)
async def get_file_name_from_admin(message: types.Message, state: FSMContext):
    if message.content_type == types.ContentType.TEXT:
        with open("file_ids.json", 'r', encoding='UTF-8') as files_json:
            files = json.loads(files_json.read())
        async with state.proxy() as data:
            files.update({message.text: data['document']})
        with open("file_ids.json", 'w', encoding='UTF-8') as files_json:
            json.dump(files, files_json, sort_keys=False, indent=4, ensure_ascii=False, separators=(',', ': '))
        await message.answer(f"–£—Ä–∞! –ù–æ–≤—ã–π —Ñ–∞–π–ª —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º '{message.text}' —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
        await state.finish()
    else:
        await message.answer("–Ø –∂–¥—É –æ—Ç —Ç–µ–±—è –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞!\n–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –æ—Ç–º–µ–Ω–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞, –Ω–∞–ø–∏—à–∏ /cancel")


@dp.message_handler(content_types=['text'], state=ProfileStatesGroup.get_del_number_from_admin)
async def get_del_number_from_admin(message: types.Message, state: FSMContext):
    if message.text.isdigit():
        num = int(message.text)
        with open("file_ids.json", 'r', encoding='UTF-8') as files_json:
            files = json.loads(files_json.read())
        if 0 < num <= len(files):
            name = list(files.keys())[num - 1]
            files.pop(name)
            with open("file_ids.json", 'w', encoding='UTF-8') as files_json:
                json.dump(files, files_json, sort_keys=False, indent=4, ensure_ascii=False, separators=(',', ': '))
            await message.answer(f"–ö–æ–Ω—Å–ø–µ–∫—Ç '{name}' —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω!")
            await state.finish()
        else:
            await message.answer("–ö–æ–Ω—Å–ø–µ–∫—Ç–∞ —Å —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ...\n–ù–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã.")
    else:
        await message.answer("–¢—ã –≤–≤—ë–ª –Ω–µ —á–∏—Å–ª–æ!\n–ù–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É \\cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã.")


@dp.message_handler(state=ProfileStatesGroup.get_file_number)  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞
async def get_file_number(message: types.Message, state: FSMContext):  # –∫–æ–Ω—Å–ø–µ–∫—Ç–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if message.text.isdigit():
        num = int(message.text)
        with open("file_ids.json", 'r', encoding='UTF-8') as files_json:
            file_ids = [*json.loads(files_json.read()).values()]
        if 0 < num <= len(file_ids):
            await bot.send_document(chat_id=message.chat.id, document=file_ids[num - 1])
            await state.finish()
        else:
            await message.answer("–ö–æ–Ω—Å–ø–µ–∫—Ç–∞ —Å —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ...\n–ù–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã.")
    else:
        await message.answer("–¢—ã –≤–≤—ë–ª –Ω–µ —á–∏—Å–ª–æ!\n–ù–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É \\cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã.")


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)

from aiogram import Bot, Dispatcher, types, executor
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove

TOKEN_API = "6209644592:AAEkRoaDzFfFa1F6OxfoWmCjhhAlCkb-dxU"
HELP_COMMAND = """ ü§°<b>–ö–û–ú–ê–ù–î–´ –ë–û–¢–ê</b>ü§°
<b>–¢–µ—Å—Ç—ã</b> - <em>–¢–µ—Å—Ç—ã</em>
<b>–ò—Å—Ç–æ—Ä–∏—è –∫–æ–º–∞–Ω–¥—ã</b> - <em>–ò—Å—Ç–æ—Ä–∏—è –∫–æ–º–∞–Ω–¥—ã</em>
<b>–ö–æ–Ω—Å–ø–µ–∫—Ç—ã</b> - <em>–ö–æ–Ω—Å–ø–µ–∫—Ç—ã</em>
<b>–î–∞–π–¥–∂–µ—Å—Ç</b> - <em>–î–∞–π–¥–∂–µ—Å—Ç</em>"""

f = open('history.txt', 'r', encoding='UTF-8')
history = f.read()
f.close()
f = open('digest.txt', 'r', encoding='UTF-8')
digest = f.read()
f.close()

bot = Bot(TOKEN_API)
dp = Dispatcher(bot)

kb = ReplyKeyboardMarkup(resize_keyboard=True)
tests_key = KeyboardButton("–¢–µ—Å—Ç—ã")
history_key = KeyboardButton("–ò—Å—Ç–æ—Ä–∏—è –∫–æ–º–∞–Ω–¥—ã")
notes_key = KeyboardButton("–ö–æ–Ω—Å–ø–µ–∫—Ç—ã")
digest_key = KeyboardButton("–î–∞–π–¥–∂–µ—Å—Ç")
kb.add(tests_key).insert(history_key).add(notes_key).insert(digest_key)


@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    await bot.send_message(chat_id=message.chat.id,
                           text="–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç...\n–ù–∞–ø–∏—à–∏ ü•µ /help ü•µ –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥.",
                           reply_markup=kb)
    await message.delete()


@dp.message_handler(commands=['help'])
async def help_command(message: types.Message):
    await message.answer(text=HELP_COMMAND, parse_mode="HTML")


@dp.message_handler(commands=['sticker'])
async def sticker_command(message: types.Message):
    await bot.send_sticker(chat_id=message.chat.id,
                           sticker="CAACAgIAAxkBAAEH9IZj_3URiPgO1XGM3J_U7DHziqpJGgACEyIAAoaSSUumfyCbHPyBqS4E")


@dp.message_handler()
async def unclear_command(message: types.Message):
    if message.text == "–¢–µ—Å—Ç—ã":
        await message.answer(text="–Ø –ø–æ–∫–∞ —á—Ç–æ –Ω–µ –º–æ–≥—É –¥–∞–≤–∞—Ç—å —Ç–µ–±–µ —Ç–µ—Å—Ç—ã ü•∫")
    elif message.text == "–ò—Å—Ç–æ—Ä–∏—è –∫–æ–º–∞–Ω–¥—ã":
        await message.answer(text=history)
    elif message.text == "–ö–æ–Ω—Å–ø–µ–∫—Ç—ã":
        await message.answer(text="–Ø –ø–æ–∫–∞ —á—Ç–æ –Ω–µ –º–æ–≥—É –≤—ã–¥–∞–≤–∞—Ç—å –∫–æ–Ω—Å–ø–µ–∫—Ç—ã ü•∫")
    elif message.text == "–î–∞–π–¥–∂–µ—Å—Ç":
        await message.answer(text=digest)
    else:
        await message.answer(text="–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è ü•∫")


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)

from aiogram import Bot, Dispatcher, types, executor
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
import json

with open("config.json", 'r') as cfg:
    config = json.loads(cfg.read())

with open('txtfiles/history.txt', 'r', encoding='UTF-8') as file:
    history = file.read()

with open('txtfiles/diegest.txt', 'r', encoding='UTF-8') as file:
    digest = file.read()

bot = Bot(config['TOKEN_API'])
dp = Dispatcher(bot)

kb = ReplyKeyboardMarkup(resize_keyboard=True)
tests_key = KeyboardButton("–¢–µ—Å—Ç—ã")
history_key = KeyboardButton("–ò—Å—Ç–æ—Ä–∏—è –∫–æ–º–∞–Ω–¥—ã")
notes_key = KeyboardButton("–ö–æ–Ω—Å–ø–µ–∫—Ç—ã")
digest_key = KeyboardButton("–î–∞–π–¥–∂–µ—Å—Ç")
kb.add(tests_key).insert(history_key).add(notes_key).insert(digest_key)


@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    await bot.send_message(chat_id=message.chat.id,
                           text="–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç...\n–ò—Å–ø–æ–ª—å–∑—É–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å–æ –º–Ω–æ–π.",
                           reply_markup=kb)
    await message.delete()


@dp.message_handler()
async def unclear_command(message: types.Message):
    if message.text == "–¢–µ—Å—Ç—ã":
        await message.answer(text="–Ø –ø–æ–∫–∞ —á—Ç–æ –Ω–µ –º–æ–≥—É –¥–∞–≤–∞—Ç—å —Ç–µ–±–µ —Ç–µ—Å—Ç—ã ü•∫")
    elif message.text == "–ò—Å—Ç–æ—Ä–∏—è –∫–æ–º–∞–Ω–¥—ã":
        await message.answer(text=history)
    elif message.text == "–ö–æ–Ω—Å–ø–µ–∫—Ç—ã":
        await message.answer(text="–Ø –ø–æ–∫–∞ —á—Ç–æ –Ω–µ –º–æ–≥—É –≤—ã–¥–∞–≤–∞—Ç—å –∫–æ–Ω—Å–ø–µ–∫—Ç—ã ü•∫")
    elif message.text == "–î–∞–π–¥–∂–µ—Å—Ç":
        await message.answer(text=digest)
    else:
        await message.answer(text="–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è ü•∫")


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
